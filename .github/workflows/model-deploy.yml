name: Model Deployment Automation

on:
  push:
    branches: [ main ]
    paths:
      - "models/**"
  workflow_dispatch:

jobs:
  deploy-model:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Detect changed model directories
      id: detect
      run: |
        # Get changed files under models/
        files=$(git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep '^models/' || true)

        new_models=""
        updated_models=""

        while read -r status file; do
          [[ -z "$file" ]] && continue   # skip empty lines
          model_dir=$(echo "$file" | cut -d'/' -f2)  # folder name under models/

          if [[ "$status" == "A" ]]; then
            new_models="$new_models $model_dir"
          else
            updated_models="$updated_models $model_dir"
          fi
        done <<< "$files"

        # Remove duplicates
        new_models=$(echo "$new_models" | xargs -n1 | sort -u | xargs)
        updated_models=$(echo "$updated_models" | xargs -n1 | sort -u | xargs)

        echo "new_models=$new_models" >> $GITHUB_OUTPUT
        echo "updated_models=$updated_models" >> $GITHUB_OUTPUT

    - name: Register new models via API
      if: steps.detect.outputs.new_models != ''
      run: |
        for model in ${{ steps.detect.outputs.new_models }}; do
          echo "Registering new model: $model"
          curl -s -w "\nStatus: %{http_code}\n" -o - \
            -X POST "http://127.0.0.1:8000.com/register-model" \
            -H "Content-Type: application/json" \
            -d "{\"model_name\": \"$model\"}"
        done

    - name: Update existing models via API
      if: steps.detect.outputs.updated_models != ''
      run: |
        for model in ${{ steps.detect.outputs.updated_models }}; do
          echo "Updating model: $model"
          curl -s -w "\nStatus: %{http_code}\n" -o - \
            -X POST "http://127.0.0.1:8000.com/update-model" \
            -H "Content-Type: application/json" \
            -d "{\"model_name\": \"$model\"}"
        done
