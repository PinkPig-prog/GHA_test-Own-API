name: Model Deployment Automation

on:
  push:
    branches: [ main ]
    paths:
      - "models/**"   # trigger only when something in models/ changes
  workflow_dispatch:

jobs:
  deploy-model:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Detect new or updated models
      id: detect
      run: |
        git fetch origin main
        changed_files=$(git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep '^models/' || true)
    
        new_models=""
        updated_models=""
    
        while read -r status file; do
          # extract the first folder under models/
          model_dir=$(echo "$file" | sed -E 's|models/([^/]+)/.*|\1|')
    
          # skip if empty
          [ -z "$model_dir" ] && continue
    
          if [[ "$status" == "A" ]]; then
            new_models="$new_models $model_dir"
          elif [[ "$status" == "M" ]]; then
            updated_models="$updated_models $model_dir"
          fi
        done <<< "$changed_files"
    
        # remove leading/trailing spaces
        new_models=$(echo $new_models)
        updated_models=$(echo $updated_models)
    
        echo "new_models=$new_models" >> $GITHUB_OUTPUT
        echo "updated_models=$updated_models" >> $GITHUB_OUTPUT

    - name: Register new models
      if: steps.detect.outputs.new_models != ''
      run: |
        for model in ${{ steps.detect.outputs.new_models }}; do
          echo "Registering model: $model"
          curl -X POST "https://48399197-d109-447f-a562-0efddbd1a346.mock.pstmn.io/register" \
            -H "Content-Type: application/json" \
            -d "{\"model_name\": \"$model\"}"
          echo "" # newline for readability
        done

    - name: Update existing models
      if: steps.detect.outputs.updated_models != ''
      run: |
        for model in ${{ steps.detect.outputs.updated_models }}; do
          echo "Updating model: $model"
          curl -X POST "https://48399197-d109-447f-a562-0efddbd1a346.mock.pstmn.io/update" \
            -H "Content-Type: application/json" \
            -d "{\"model_name\": \"$model\", \"version\": \"v1.1\", \"changes\": \"Updated weights\"}"
          echo ""
        done
